name: Build and Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        build-type: [Release]

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true

      - name: Show conda installation info
        run: conda info

      - name: Install build tools and dependencies into env
        run: |
          mamba install --file=requirements.txt
          mamba list

      - name: Install pthreads
        if: matrix.os == 'windows-latest'
        run: mamba install pthreads-win32

      - name: Make cmake build directory
        working-directory: ${{ github.workspace }}
        run: cmake -E make_directory build

      - name: Configure cmake (UNIX)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake .. \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
          -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX

      - name: Configure cmake (WINDOWS)
        if: matrix.os == 'windows-latest'
        working-directory: ${{ github.workspace }}/build
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" x86

          cmake .. `
            -DCMAKE_INSTALL_PREFIX:PATH=$env:CONDA_PREFIX `
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} `
            -DPKG_CONFIG_EXECUTABLE:FILEPATH=$env:CONDA_PREFIX/Library/bin/pkg-config.exe

      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: cmake --build . --target install --config ${{ matrix.build-type }}

      - name: Test
        working-directory: ${{ github.workspace }}/build
        run: |
          sedflux -h
          make test
          ew/utils/utils-test-io --verbose
